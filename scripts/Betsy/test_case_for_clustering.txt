Test case for Clustering 1.Given a gse_dataset, generate a cluster_heatmap.
cluster_alg = kmeans
k=5
gene_center = median
gene_normalize =varianceThe input command will be like:
python ../Betsy/protocol_engine.py  --protocol_file 'cluster_genes' --input 'gse_dataset:GSE21947' --output 'cluster_heatmap' --parameter 'k:5' --parameters 'preprocess:rma' --parameters 'gene_center:median' --parameters 'gene_normalize:variance' --parameters 'cluster_alg:kmeans'

2.Given a gse_dataset_and_platform, genereate a cluster_heatmap.
cluster_alg = kmeans
k=5
gene_center = median
gene_normalize =variance
The input command will be like:

python ../Betsy/protocol_engine.py  --protocol_file 'cluster_genes' --input 'gse_dataset_and_platform:GSE17907,GPL570' --output 'cluster_heatmap' --parameter 'k:5' --parameters 'preprocess:rma' --parameters 'gene_center:median' --parameters 'gene_normalize:variance' --parameters 'cluster_alg:kmeans'

3. Given two gse_dataset, merge and plot the heatmap. 
quatile = yes_quantile,
cluster_alg=pca
preprocess = rma
The input command will be like:

python ../Betsy/protocol_engine.py  --protocol_file 'cluster_genes' --input 'gse_dataset:a:neg:GSE21947' --input 'gse_dataset:b:pos:GSE20437' --output 'cluster_heatmap:a,b:neg,pos' --parameters 'preprocess:rma' --parameters 'quantile:yes_quantile' --parameters 'cluster_alg:pca'