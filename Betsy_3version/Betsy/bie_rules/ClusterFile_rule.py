#ClusterFile
from Betsy.bie3 import *
import SignalFile2_rule
ClusterFile = DataType(
    "ClusterFile",
    Attribute("cluster_alg",['som','pca','kmeans','hierarchical'],'kmeans','kmeans'),
    Attribute("distance",['correlation','euclidean'],'correlation','correlation'),
    # Properties of the data.
    Attribute(
        "preprocess",["unknown", "illumina", "agilent", "mas5", "rma", "loess"],
        "unknown","unknown"),
    Attribute(
        "missing_values",["no"],"no","no"),
    Attribute(
        "missing_algorithm",["none", "median_fill", "zero_fill"],
        "zero_fill", "zero_fill"),
    Attribute("filter",["yes","no"], "no","no"),
    Attribute(
        "logged",[ "no", "yes"],"yes","yes"),
    # Normalizing the genes.
    Attribute(
        "gene_center",["unknown", "no", "mean", "median"],
        "no","no"),
    Attribute(
        "gene_normalize",["unknown", "no", "variance", "sum_of_squares"],
        "no","no"),

    # Normalizing the data.  Very difficult to check normalization.
    # If you're not sure if the data is normalized, then the answer is
    # "no".
    Attribute(
        "dwd_norm",["no", "yes"], "no","no"),
    Attribute(
        "bfrm_norm",["no", "yes"], "no","no"),
    Attribute(
        "quantile_norm",["no", "yes"], "no","no"),
    Attribute(
        "shiftscale_norm",["no", "yes"], "no","no"),
    Attribute(
        "combat_norm",["no", "yes"], "no","no"),

    # Annotations.
    Attribute("annotate",["no", "yes"], "no","no"),
    Attribute(
        "unique_genes",["no", "average_genes", "high_var", "first_gene"],
        "no","no"),
    Attribute(
        "duplicate_probe",["no", "yes", "closest_probe", "high_var_probe"],
        "no","no"),
    Attribute("rename_sample",["no", "yes"], "no","no"),

    # Unclassified.
    Attribute("num_features",["yes","no"], "no","no"),
    Attribute("gene_order",["no", "class_neighbors", "gene_list", "t_test_p", "t_test_fdr"],
       "no","no"),
    Attribute("predataset",["no", "yes"], "no","no"),
    Attribute("platform",["yes","no"], "no","no"),
    Attribute("group_fc",["yes","no"], "no","no"),
    Attribute("contents",["train0", "train1", "test", "class0,class1,test",
                        "class0", "class1", "class0,class1", "unspecified"],
                   "unspecified","unspecified")
    )

Heatmap = DataType(
    "Heatmap",
    Attribute("cluster_alg",['som','pca','kmeans','hierarchical','no_cluster_alg'],
              'no_cluster_alg','no_cluster_alg'),
    Attribute("distance",['correlation','euclidean'],'euclidean','euclidean'),
    Attribute('hm_width',['yes','no'],'yes','yes'),
    Attribute('hm_height',['yes','no'],'yes','yes'),
    Attribute('color',['red_green', 'blue_yellow'],'red_green','red_green'),
    # Properties of the data.
    Attribute(
        "preprocess",["unknown", "illumina", "agilent", "mas5", "rma", "loess"],
        "unknown","unknown"),
    Attribute(
        "missing_values",["no"],"no","no"),
    Attribute(
        "missing_algorithm",["none", "median_fill", "zero_fill"],
        "zero_fill", "zero_fill"),
    Attribute("filter",["yes","no"], "no","no"),
    Attribute(
        "logged",[ "no", "yes"],"yes","yes"),
    # Normalizing the genes.
    Attribute(
        "gene_center",["unknown", "no", "mean", "median"],
        "no","no"),
    Attribute(
        "gene_normalize",["unknown", "no", "variance", "sum_of_squares"],
        "no","no"),

    # Normalizing the data.  Very difficult to check normalization.
    # If you're not sure if the data is normalized, then the answer is
    # "no".
    Attribute(
        "dwd_norm",["no", "yes"], "no","no"),
    Attribute(
        "bfrm_norm",["no", "yes"], "no","no"),
    Attribute(
        "quantile_norm",["no", "yes"], "no","no"),
    Attribute(
        "shiftscale_norm",["no", "yes"], "no","no"),
    Attribute(
        "combat_norm",["no", "yes"], "no","no"),

    # Annotations.
    Attribute("annotate",["no", "yes"], "no","no"),
    Attribute(
        "unique_genes",["no", "average_genes", "high_var", "first_gene"],
        "no","no"),
    Attribute(
        "duplicate_probe",["no", "yes", "closest_probe", "high_var_probe"],
        "no","no"),
    Attribute("rename_sample",["no", "yes"], "no","no"),

    # Unclassified.
    Attribute("num_features",["yes","no"], "no","no"),
    Attribute("gene_order",["no", "class_neighbors", "gene_list", "t_test_p", "t_test_fdr"],
       "no","no"),
    Attribute("predataset",["no", "yes"], "no","no"),
    Attribute("platform",["yes","no"], "no","no"),
    Attribute("group_fc",["yes","no"], "no","no"),
    Attribute("contents",["train0", "train1", "test", "class0,class1,test",
                        "class0", "class1", "class0,class1", "unspecified"],
                   "unspecified","unspecified")
    )

list_files = [ClusterFile,Heatmap]

all_modules = [
    Module(
        'cluster_genes_by_som',
        SignalFile2_rule.SignalFile2,ClusterFile,
        Constraint("format",MUST_BE,"tdf"),
        Constraint("logged",MUST_BE,"yes"),
        Consequence("cluster_alg",SET_TO,'som'),
        Consequence("distance",SET_TO_ONE_OF,['correlation','euclidean']),
        Constraint("missing_values",MUST_BE,"no"),
        Constraint("preprocess",CAN_BE_ANY_OF,["unknown", "illumina", "agilent",
                                "mas5", "rma", "loess"]),
        Constraint("contents",CAN_BE_ANY_OF,["train0", "train1", "test",
                        "class0", "class1", "class0,class1","class0,class1,test", "unspecified"]),
        Constraint("gene_center",CAN_BE_ANY_OF,["unknown", "no", "mean", "median"]),
        Constraint("gene_normalize",CAN_BE_ANY_OF,["unknown", "no", "variance", "sum_of_squares"]),
        Constraint("missing_algorithm",CAN_BE_ANY_OF,["none", "median_fill", "zero_fill"]),
        Constraint("predataset",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("rename_sample",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("filter",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("quantile_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("dwd_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("bfrm_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("combat_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("shiftscale_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("num_features",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("platform",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("duplicate_probe",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("unique_genes",CAN_BE_ANY_OF,["no", "average_genes", "high_var", "first_gene"]),
        Constraint("group_fc",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("gene_order",CAN_BE_ANY_OF,["no", "class_neighbors", "gene_list", "t_test_p", "t_test_fdr"]),
        Constraint("annotate",CAN_BE_ANY_OF,["no", "yes"]),
        Consequence("contents",SAME_AS_CONSTRAINT),
        Consequence("logged",SAME_AS_CONSTRAINT),
        Consequence("missing_values",SAME_AS_CONSTRAINT),
        Consequence("missing_algorithm",SAME_AS_CONSTRAINT),
        Consequence("preprocess",SAME_AS_CONSTRAINT),
        Consequence("predataset",SAME_AS_CONSTRAINT),
        Consequence("rename_sample",SAME_AS_CONSTRAINT),
        Consequence("filter",SAME_AS_CONSTRAINT),
        Consequence("dwd_norm",SAME_AS_CONSTRAINT),
        Consequence("bfrm_norm",SAME_AS_CONSTRAINT),
        Consequence("quantile_norm",SAME_AS_CONSTRAINT),
        Consequence("shiftscale_norm",SAME_AS_CONSTRAINT),
        Consequence("combat_norm",SAME_AS_CONSTRAINT),
        Consequence("gene_center",SAME_AS_CONSTRAINT),
        Consequence("gene_normalize",SAME_AS_CONSTRAINT),
        Consequence("num_features",SAME_AS_CONSTRAINT),
        Consequence("platform",SAME_AS_CONSTRAINT),
        Consequence("duplicate_probe",SAME_AS_CONSTRAINT),
        Consequence("unique_genes",SAME_AS_CONSTRAINT),
        Consequence("group_fc",SAME_AS_CONSTRAINT),
        Consequence("gene_order",SAME_AS_CONSTRAINT),
        Consequence("annotate",SAME_AS_CONSTRAINT),
        ),
    Module(
        'cluster_genes_by_pca',
        SignalFile2_rule.SignalFile2,ClusterFile,
        Constraint("format",MUST_BE,"tdf"),
        Constraint("logged",MUST_BE,"yes"),
        Consequence("cluster_alg",SET_TO,'pca'),
        Consequence("distance",SET_TO_ONE_OF,['correlation','euclidean']),
        Constraint("missing_values",MUST_BE,"no"),
        Constraint("preprocess",CAN_BE_ANY_OF,["unknown", "illumina", "agilent",
                                "mas5", "rma", "loess"]),
        Constraint("contents",CAN_BE_ANY_OF,["train0", "train1", "test",
                        "class0", "class1", "class0,class1","class0,class1,test", "unspecified"]),
        Constraint("gene_center",CAN_BE_ANY_OF,["unknown", "no", "mean", "median"]),
        Constraint("gene_normalize",CAN_BE_ANY_OF,["unknown", "no", "variance", "sum_of_squares"]),
        Constraint("missing_algorithm",CAN_BE_ANY_OF,["none", "median_fill", "zero_fill"]),
        Constraint("predataset",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("rename_sample",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("filter",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("quantile_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("dwd_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("bfrm_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("combat_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("shiftscale_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("num_features",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("platform",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("duplicate_probe",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("unique_genes",CAN_BE_ANY_OF,["no", "average_genes", "high_var", "first_gene"]),
        Constraint("group_fc",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("gene_order",CAN_BE_ANY_OF,["no", "class_neighbors", "gene_list", "t_test_p", "t_test_fdr"]),
        Constraint("annotate",CAN_BE_ANY_OF,["no", "yes"]),
        Consequence("contents",SAME_AS_CONSTRAINT),
        Consequence("logged",SAME_AS_CONSTRAINT),
        Consequence("missing_values",SAME_AS_CONSTRAINT),
        Consequence("missing_algorithm",SAME_AS_CONSTRAINT),
        Consequence("preprocess",SAME_AS_CONSTRAINT),
        Consequence("predataset",SAME_AS_CONSTRAINT),
        Consequence("rename_sample",SAME_AS_CONSTRAINT),
        Consequence("filter",SAME_AS_CONSTRAINT),
        Consequence("dwd_norm",SAME_AS_CONSTRAINT),
        Consequence("bfrm_norm",SAME_AS_CONSTRAINT),
        Consequence("quantile_norm",SAME_AS_CONSTRAINT),
        Consequence("shiftscale_norm",SAME_AS_CONSTRAINT),
        Consequence("combat_norm",SAME_AS_CONSTRAINT),
        Consequence("gene_center",SAME_AS_CONSTRAINT),
        Consequence("gene_normalize",SAME_AS_CONSTRAINT),
        Consequence("num_features",SAME_AS_CONSTRAINT),
        Consequence("platform",SAME_AS_CONSTRAINT),
        Consequence("duplicate_probe",SAME_AS_CONSTRAINT),
        Consequence("unique_genes",SAME_AS_CONSTRAINT),
        Consequence("group_fc",SAME_AS_CONSTRAINT),
        Consequence("gene_order",SAME_AS_CONSTRAINT),
        Consequence("annotate",SAME_AS_CONSTRAINT),),
    Module(
        'cluster_genes_by_kmeans',
        SignalFile2_rule.SignalFile2,ClusterFile,
        UserInput("k_value",5),
        Constraint("format",MUST_BE,"tdf"),
        Constraint("logged",MUST_BE,"yes"),
        Consequence("cluster_alg",SET_TO,'kmeans'),
        Consequence("distance",SET_TO_ONE_OF,['correlation','euclidean']),
               Constraint("missing_values",MUST_BE,"no"),
        Constraint("preprocess",CAN_BE_ANY_OF,["unknown", "illumina", "agilent",
                                "mas5", "rma", "loess"]),
        Constraint("contents",CAN_BE_ANY_OF,["train0", "train1", "test",
                        "class0", "class1", "class0,class1","class0,class1,test", "unspecified"]),
        Constraint("gene_center",CAN_BE_ANY_OF,["unknown", "no", "mean", "median"]),
        Constraint("gene_normalize",CAN_BE_ANY_OF,["unknown", "no", "variance", "sum_of_squares"]),
        Constraint("missing_algorithm",CAN_BE_ANY_OF,["none", "median_fill", "zero_fill"]),
        Constraint("predataset",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("rename_sample",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("filter",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("quantile_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("dwd_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("bfrm_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("combat_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("shiftscale_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("num_features",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("platform",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("duplicate_probe",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("unique_genes",CAN_BE_ANY_OF,["no", "average_genes", "high_var", "first_gene"]),
        Constraint("group_fc",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("gene_order",CAN_BE_ANY_OF,["no", "class_neighbors", "gene_list", "t_test_p", "t_test_fdr"]),
        Constraint("annotate",CAN_BE_ANY_OF,["no", "yes"]),
        Consequence("contents",SAME_AS_CONSTRAINT),
        Consequence("logged",SAME_AS_CONSTRAINT),
        Consequence("missing_values",SAME_AS_CONSTRAINT),
        Consequence("missing_algorithm",SAME_AS_CONSTRAINT),
        Consequence("preprocess",SAME_AS_CONSTRAINT),
        Consequence("predataset",SAME_AS_CONSTRAINT),
        Consequence("rename_sample",SAME_AS_CONSTRAINT),
        Consequence("filter",SAME_AS_CONSTRAINT),
        Consequence("dwd_norm",SAME_AS_CONSTRAINT),
        Consequence("bfrm_norm",SAME_AS_CONSTRAINT),
        Consequence("quantile_norm",SAME_AS_CONSTRAINT),
        Consequence("shiftscale_norm",SAME_AS_CONSTRAINT),
        Consequence("combat_norm",SAME_AS_CONSTRAINT),
        Consequence("gene_center",SAME_AS_CONSTRAINT),
        Consequence("gene_normalize",SAME_AS_CONSTRAINT),
        Consequence("num_features",SAME_AS_CONSTRAINT),
        Consequence("platform",SAME_AS_CONSTRAINT),
        Consequence("duplicate_probe",SAME_AS_CONSTRAINT),
        Consequence("unique_genes",SAME_AS_CONSTRAINT),
        Consequence("group_fc",SAME_AS_CONSTRAINT),
        Consequence("gene_order",SAME_AS_CONSTRAINT),
        Consequence("annotate",SAME_AS_CONSTRAINT),),
    Module(
        'cluster_genes_by_hierarchical',
        SignalFile2_rule.SignalFile2,ClusterFile,
        Constraint("format",MUST_BE,"tdf"),
        Constraint("logged",MUST_BE,"yes"),
        Consequence("cluster_alg",SET_TO,'hierarchical'),
        Consequence("distance",SET_TO_ONE_OF,['correlation','euclidean']),
               Constraint("missing_values",MUST_BE,"no"),
        Constraint("preprocess",CAN_BE_ANY_OF,["unknown", "illumina", "agilent",
                                "mas5", "rma", "loess"]),
        Constraint("contents",CAN_BE_ANY_OF,["train0", "train1", "test",
                        "class0", "class1", "class0,class1","class0,class1,test", "unspecified"]),
        Constraint("gene_center",CAN_BE_ANY_OF,["unknown", "no", "mean", "median"]),
        Constraint("gene_normalize",CAN_BE_ANY_OF,["unknown", "no", "variance", "sum_of_squares"]),
        Constraint("missing_algorithm",CAN_BE_ANY_OF,["none", "median_fill", "zero_fill"]),
        Constraint("predataset",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("rename_sample",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("filter",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("quantile_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("dwd_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("bfrm_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("combat_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("shiftscale_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("num_features",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("platform",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("duplicate_probe",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("unique_genes",CAN_BE_ANY_OF,["no", "average_genes", "high_var", "first_gene"]),
        Constraint("group_fc",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("gene_order",CAN_BE_ANY_OF,["no", "class_neighbors", "gene_list", "t_test_p", "t_test_fdr"]),
        Constraint("annotate",CAN_BE_ANY_OF,["no", "yes"]),
        Consequence("contents",SAME_AS_CONSTRAINT),
        Consequence("logged",SAME_AS_CONSTRAINT),
        Consequence("missing_values",SAME_AS_CONSTRAINT),
        Consequence("missing_algorithm",SAME_AS_CONSTRAINT),
        Consequence("preprocess",SAME_AS_CONSTRAINT),
        Consequence("predataset",SAME_AS_CONSTRAINT),
        Consequence("rename_sample",SAME_AS_CONSTRAINT),
        Consequence("filter",SAME_AS_CONSTRAINT),
        Consequence("dwd_norm",SAME_AS_CONSTRAINT),
        Consequence("bfrm_norm",SAME_AS_CONSTRAINT),
        Consequence("quantile_norm",SAME_AS_CONSTRAINT),
        Consequence("shiftscale_norm",SAME_AS_CONSTRAINT),
        Consequence("combat_norm",SAME_AS_CONSTRAINT),
        Consequence("gene_center",SAME_AS_CONSTRAINT),
        Consequence("gene_normalize",SAME_AS_CONSTRAINT),
        Consequence("num_features",SAME_AS_CONSTRAINT),
        Consequence("platform",SAME_AS_CONSTRAINT),
        Consequence("duplicate_probe",SAME_AS_CONSTRAINT),
        Consequence("unique_genes",SAME_AS_CONSTRAINT),
        Consequence("group_fc",SAME_AS_CONSTRAINT),
        Consequence("gene_order",SAME_AS_CONSTRAINT),
        Consequence("annotate",SAME_AS_CONSTRAINT),),
    Module(
        'plot_signal_heatmap',
        SignalFile2_rule.SignalFile2,Heatmap,
        UserInput('hm_width_value',20),
        UserInput('hm_height_value',1),
        Constraint("format",MUST_BE,"tdf"),
        Constraint("logged",MUST_BE,"yes"),
        Consequence("cluster_alg",SET_TO,'no_cluster_alg'),
        Consequence("distance",SET_TO_ONE_OF,['correlation','euclidean']),
        Consequence("hm_width",SET_TO,'yes'),
        Consequence("hm_height",SET_TO,'yes'),
        Consequence("color",SET_TO_ONE_OF,['red_green', 'blue_yellow']),
        Constraint("missing_values",MUST_BE,"no"),
        Constraint("preprocess",CAN_BE_ANY_OF,["unknown", "illumina", "agilent",
                                "mas5", "rma", "loess"]),
        Constraint("contents",CAN_BE_ANY_OF,["train0", "train1", "test",
                        "class0", "class1", "class0,class1","class0,class1,test", "unspecified"]),
        Constraint("gene_center",CAN_BE_ANY_OF,["unknown", "no", "mean", "median"]),
        Constraint("gene_normalize",CAN_BE_ANY_OF,["unknown", "no", "variance", "sum_of_squares"]),
        Constraint("missing_algorithm",CAN_BE_ANY_OF,["none", "median_fill", "zero_fill"]),
        Constraint("predataset",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("rename_sample",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("filter",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("quantile_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("dwd_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("bfrm_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("combat_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("shiftscale_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("num_features",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("platform",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("duplicate_probe",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("unique_genes",CAN_BE_ANY_OF,["no", "average_genes", "high_var", "first_gene"]),
        Constraint("group_fc",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("gene_order",CAN_BE_ANY_OF,["no", "class_neighbors", "gene_list", "t_test_p", "t_test_fdr"]),
        Constraint("annotate",CAN_BE_ANY_OF,["no", "yes"]),
        Consequence("contents",SAME_AS_CONSTRAINT),
        Consequence("logged",SAME_AS_CONSTRAINT),
        Consequence("missing_values",SAME_AS_CONSTRAINT),
        Consequence("missing_algorithm",SAME_AS_CONSTRAINT),
        Consequence("preprocess",SAME_AS_CONSTRAINT),
        Consequence("predataset",SAME_AS_CONSTRAINT),
        Consequence("rename_sample",SAME_AS_CONSTRAINT),
        Consequence("filter",SAME_AS_CONSTRAINT),
        Consequence("dwd_norm",SAME_AS_CONSTRAINT),
        Consequence("bfrm_norm",SAME_AS_CONSTRAINT),
        Consequence("quantile_norm",SAME_AS_CONSTRAINT),
        Consequence("shiftscale_norm",SAME_AS_CONSTRAINT),
        Consequence("combat_norm",SAME_AS_CONSTRAINT),
        Consequence("gene_center",SAME_AS_CONSTRAINT),
        Consequence("gene_normalize",SAME_AS_CONSTRAINT),
        Consequence("num_features",SAME_AS_CONSTRAINT),
        Consequence("platform",SAME_AS_CONSTRAINT),
        Consequence("duplicate_probe",SAME_AS_CONSTRAINT),
        Consequence("unique_genes",SAME_AS_CONSTRAINT),
        Consequence("group_fc",SAME_AS_CONSTRAINT),
        Consequence("gene_order",SAME_AS_CONSTRAINT),
        Consequence("annotate",SAME_AS_CONSTRAINT)),
    Module(
        'plot_signal_heatmap',
        ClusterFile,Heatmap,
        UserInput("k_value",5),
        Constraint("cluster_alg",CAN_BE_ANY_OF,['hierarchical','pca','som','kmeans']),
        Constraint("distance",CAN_BE_ANY_OF,['correlation','euclidean']),
        Constraint("logged",MUST_BE,"yes"),
        Constraint("missing_values",MUST_BE,"no"),
        Constraint("preprocess",CAN_BE_ANY_OF,["unknown", "illumina", "agilent",
                                "mas5", "rma", "loess"]),
        Constraint("contents",CAN_BE_ANY_OF,["train0", "train1", "test",
                        "class0", "class1", "class0,class1","class0,class1,test", "unspecified"]),
        Constraint("gene_center",CAN_BE_ANY_OF,["unknown", "no", "mean", "median"]),
        Constraint("gene_normalize",CAN_BE_ANY_OF,["unknown", "no", "variance", "sum_of_squares"]),
        Constraint("missing_algorithm",CAN_BE_ANY_OF,["none", "median_fill", "zero_fill"]),
        Constraint("predataset",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("rename_sample",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("filter",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("quantile_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("dwd_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("bfrm_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("combat_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("shiftscale_norm",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("num_features",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("platform",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("duplicate_probe",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("unique_genes",CAN_BE_ANY_OF,["no", "average_genes", "high_var", "first_gene"]),
        Constraint("group_fc",CAN_BE_ANY_OF,["no", "yes"]),
        Constraint("gene_order",CAN_BE_ANY_OF,["no", "class_neighbors", "gene_list", "t_test_p", "t_test_fdr"]),
        Constraint("annotate",CAN_BE_ANY_OF,["no", "yes"]),
        Consequence("cluster_alg",SAME_AS_CONSTRAINT),
        Consequence("hm_width",SET_TO,"yes"),
        Consequence("hm_height",SET_TO,'yes'),
        Consequence("color",SET_TO_ONE_OF,['red_green', 'blue_yellow']),
        Consequence("distance",SAME_AS_CONSTRAINT),
        Consequence("contents",SAME_AS_CONSTRAINT),
        Consequence("logged",SAME_AS_CONSTRAINT),
        Consequence("missing_values",SAME_AS_CONSTRAINT),
        Consequence("missing_algorithm",SAME_AS_CONSTRAINT),
        Consequence("preprocess",SAME_AS_CONSTRAINT),
        Consequence("predataset",SAME_AS_CONSTRAINT),
        Consequence("rename_sample",SAME_AS_CONSTRAINT),
        Consequence("filter",SAME_AS_CONSTRAINT),
        Consequence("dwd_norm",SAME_AS_CONSTRAINT),
        Consequence("bfrm_norm",SAME_AS_CONSTRAINT),
        Consequence("quantile_norm",SAME_AS_CONSTRAINT),
        Consequence("shiftscale_norm",SAME_AS_CONSTRAINT),
        Consequence("combat_norm",SAME_AS_CONSTRAINT),
        Consequence("gene_center",SAME_AS_CONSTRAINT),
        Consequence("gene_normalize",SAME_AS_CONSTRAINT),
        Consequence("num_features",SAME_AS_CONSTRAINT),
        Consequence("platform",SAME_AS_CONSTRAINT),
        Consequence("duplicate_probe",SAME_AS_CONSTRAINT),
        Consequence("unique_genes",SAME_AS_CONSTRAINT),
        Consequence("group_fc",SAME_AS_CONSTRAINT),
        Consequence("gene_order",SAME_AS_CONSTRAINT),
        Consequence("annotate",SAME_AS_CONSTRAINT)),
            
    ]
