Starting rule engine.
Checking parameters.
Generating a network that produces a:
VCFFolder
  aligner=bowtie2
  backfilled=no
  caller=gatk
  contents=unspecified
  coordinates_from=unknown
  filtered_calls=no
  is_consensus=no
  somatic=no
  vartype=all
  vcf_recalibrated=no
Made a network with 121 nodes.
Writing network in json format: test01.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 16 possible pipelines.
Making sure all required attributes (--mattr) are provided.
Missing --mattr: realign_indels_bam_folder requires attribute "realign_known_sites1".
Missing --mattr: create_realign_targets requires attribute "realign_known_sites1".
Starting rule engine.
Checking parameters.
Generating a network that produces a:
ClassifyFile
  actual_label=no
  classify_alg=random_forest
  loocv=yes
  svm_kernel=linear
  wv_feature_stat=wv_snr
Made a network with 138 nodes.
Writing network in json format: test02.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 4 possible pipelines.
Making sure all required attributes (--mattr) are provided.
Pruning redundant pipelines.
No redundant pipelines found.  4 final pipelines.
Making sure all input files provided.
No file given: UnprocessedSignalFile.
No file given: ClassLabelFile.
Starting rule engine.
Checking parameters.
Generating a network that produces a:
FastQCSummary
  adapters_trimmed=no
Made a network with 16 nodes.
Writing network in json format: test03.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 2 possible pipelines.
Making sure all required attributes (--mattr) are provided.
Pruning redundant pipelines.
No redundant pipelines found.  2 final pipelines.
Making sure all input files provided.
No file given: FastqFolder.
No file given: SampleGroupFile.
Starting rule engine.
Checking parameters.
Generating a network that produces a:
RSeQCResults
  adapters_trimmed=no
  aligner=star
Made a network with 67 nodes.
Writing network in json format: test04.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 4 possible pipelines.
Making sure all required attributes (--mattr) are provided.
Pruning redundant pipelines.
No redundant pipelines found.  4 final pipelines.
Making sure all input files provided.
No file given: FastqFolder.
No file given: SampleGroupFile.
No file given: ReferenceGenome.
No file given: STARReferenceGenome.
No file given: GTFGeneModel.
Starting rule engine.
Checking parameters.
Generating a network that produces a:
PerfectAlignmentSummary
  adapters_trimmed=yes
  mouse_reads_subtracted=no
Made a network with 64 nodes.
Writing network in json format: test05.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 2 possible pipelines.
Making sure all required attributes (--mattr) are provided.
Missing --mattr: trim_adapters_trimmomatic requires attribute "adapters_fasta".
Starting rule engine.
Checking parameters.
Generating a network that produces a:
PerfectAlignmentSummary
  adapters_trimmed=yes
  mouse_reads_subtracted=no
Made a network with 64 nodes.
Writing network in json format: test06.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 2 possible pipelines.
Making sure all required attributes (--mattr) are provided.
Missing --mattr: trim_adapters_trimmomatic requires attribute "adapters_fasta".
Starting rule engine.
Checking parameters.
Generating a network that produces an:
UnprocessedSignalFile
  contents=unspecified
  format=tdf
  logged=no
  preprocess=tpm
Made a network with 65 nodes.
Writing network in json format: test07.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 2 possible pipelines.
Making sure all required attributes (--mattr) are provided.
Pruning redundant pipelines.
No redundant pipelines found.  2 final pipelines.
Making sure all input files provided.
No file given: FastqFolder.
No file given: SampleGroupFile.
No file given: ReferenceGenome.
No file given: RSEMReferenceGenome.
No file given: GTFGeneModel.
Starting rule engine.
Checking parameters.
Generating a network that produces a:
HTSeqCountSummary
  adapters_trimmed=no
  aligner=star
Made a network with 42 nodes.
Writing network in json format: test08.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 2 possible pipelines.
Making sure all required attributes (--mattr) are provided.
Pruning redundant pipelines.
No redundant pipelines found.  2 final pipelines.
Making sure all input files provided.
No file given: FastqFolder.
No file given: SampleGroupFile.
No file given: STARReferenceGenome.
No file given: GTFGeneModel.
Starting rule engine.
Checking parameters.
Generating a network that produces a:
MACS21Results
Made a network with 25 nodes.
Writing network in json format: test09.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 1 possible pipeline.
Making sure all required attributes (--mattr) are provided.
Missing --mattr: run_MACS21 requires attribute "macs_genome".
Missing --mattr: run_MACS21 requires attribute "treatment_sample".
Starting rule engine.
Checking parameters.
Generating a network that produces a:
BamFolder
  adapters_trimmed=no
  aligner=bwa_mem
  base_quality_recalibrated=yes
  duplicates_filtered=no
  duplicates_marked=yes
  has_md_tags=no
  has_read_groups=yes
  indel_realigned=yes
  indexed=yes
  is_subset=no
  mouse_reads_subtracted=no
  sorted=coordinate
  split_n_trim=no
Made a network with 98 nodes.
Writing network in json format: test10.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 4 possible pipelines.
Making sure all required attributes (--mattr) are provided.
Missing --mattr: create_realign_targets requires attribute "realign_known_sites1".
Missing --mattr: make_base_recalibration_report requires attribute "recal_known_sites1".
Missing --mattr: realign_indels_bam_folder requires attribute "realign_known_sites1".
Starting rule engine.
Checking parameters.
Generating a network that produces a:
DepthOfCoverage
  duplicates_filtered=no
Made a network with 74 nodes.
Writing network in json format: test11.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 1 possible pipeline.
Making sure all required attributes (--mattr) are provided.
Pruning redundant pipelines.
No redundant pipelines found.  1 final pipeline.
Making sure all input files provided.
No file given: BamFolder.
No file given: ReferenceGenome.
Starting rule engine.
Checking parameters.
Generating a network that produces a:
VCFFolder
  aligner=bwa_mem
  backfilled=no
  caller=somaticsniper
  contents=unspecified
  coordinates_from=unknown
  filtered_calls=no
  is_consensus=no
  somatic=yes
  vartype=snp
  vcf_recalibrated=no
Made a network with 101 nodes.
Writing network in json format: test12.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 2 possible pipelines.
Making sure all required attributes (--mattr) are provided.
Pruning redundant pipelines.
No redundant pipelines found.  2 final pipelines.
Making sure all input files provided.
No file given: BamFolder.
No file given: ReferenceGenome.
No file given: NormalCancerFile.
Starting rule engine.
Checking parameters.
Generating a network that produces a:
STARReferenceGenome
Made a network with 4 nodes.
Writing network in json format: test13.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 1 possible pipeline.
Making sure all required attributes (--mattr) are provided.
Pruning redundant pipelines.
No redundant pipelines found.  1 final pipeline.
Making sure all input files provided.
No file given: ReferenceGenome.
No file given: GTFGeneModel.
Starting rule engine.
Checking parameters.
Generating a network that produces a:
SimpleVariantMatrix
  annotated_with_annovar=yes
  annotated_with_snpeff=no
  caller_suite=cancer_with_rna
  filtered_calls=yes
  filtered_vars=no
  with_cancer_genes=yes
  with_cosmic_variants=no
  with_coverage=yes
  with_gxp=yes
  with_linked_variants=no
  with_rna_coverage=yes
Made a network with 356 nodes.
Writing network in json format: test14.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 8 possible pipelines.
Making sure all required attributes (--mattr) are provided.
Missing --mattr: add_cancer_genes_to_simplevariantmatrix requires attribute "cancer_genes_file".
Missing --mattr: filter_simplevariantfile requires attribute "wgs_or_wes".
Missing --mattr: annotate_simplevariantmatrix_with_annovar requires attribute "annovar_buildver".
Starting rule engine.
Checking parameters.
Generating a network that produces a:
SimpleVariantMatrix
  annotated_with_annovar=no
  annotated_with_snpeff=no
  caller_suite=general
  filtered_calls=no
  filtered_vars=no
  with_cancer_genes=no
  with_cosmic_variants=no
  with_coverage=no
  with_gxp=no
  with_linked_variants=no
  with_rna_coverage=no
Made a network with 132 nodes.
Writing network in json format: test15.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 6 possible pipelines.
Making sure all required attributes (--mattr) are provided.
Pruning redundant pipelines.
No redundant pipelines found.  6 final pipelines.
Making sure all input files provided.
No file given: BamFolder.
No file given: ReferenceGenome.
Starting rule engine.
Checking parameters.
Generating a network that produces an:
UnprocessedSignalFile
  contents=unspecified
  format=tdf
  logged=no
  preprocess=tpm
Made a network with 65 nodes.
Writing network in json format: test16.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 2 possible pipelines.
Making sure all required attributes (--mattr) are provided.
Pruning redundant pipelines.
No redundant pipelines found.  2 final pipelines.
Making sure all input files provided.
No file given: FastqFolder.
No file given: SampleGroupFile.
No file given: STARReferenceGenome.
No file given: RSEMReferenceGenome.
No file given: GTFGeneModel.
Starting rule engine.
Checking parameters.
Generating a network that produces an:
UnprocessedSignalFile
  contents=unspecified
  format=tdf
  logged=no
  preprocess=counts
Made a network with 74 nodes.
Writing network in json format: test17.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 2 possible pipelines.
Making sure all required attributes (--mattr) are provided.
Pruning redundant pipelines.
No redundant pipelines found.  2 final pipelines.
Making sure all input files provided.
No file given: FastqFolder.
No file given: SampleGroupFile.
No file given: STARReferenceGenome.
No file given: GTFGeneModel.
Starting rule engine.
Checking parameters.
Generating a network that produces a:
SimpleVariantMatrix
  annotated_with_annovar=no
  annotated_with_snpeff=no
  caller_suite=cancer
  filtered_calls=no
  filtered_vars=no
  with_cancer_genes=no
  with_cosmic_variants=no
  with_coverage=no
  with_gxp=no
  with_linked_variants=no
  with_rna_coverage=no
Made a network with 143 nodes.
Writing network in json format: test18.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 6 possible pipelines.
Making sure all required attributes (--mattr) are provided.
Missing --mattr: call_variants_mutect2 requires attribute "mutect_cosmic_vcf".
Missing --mattr: call_variants_mutect requires attribute "mutect_cosmic_vcf".
Missing --mattr: call_variants_muse requires attribute "muse_dbsnp_vcf".
Missing --mattr: call_variants_mutect2 requires attribute "mutect_dbsnp_vcf".
Missing --mattr: call_variants_mutect requires attribute "mutect_dbsnp_vcf".
Starting rule engine.
Checking parameters.
Generating a network that produces a:
SimpleVariantMatrix
  annotated_with_annovar=yes
  annotated_with_snpeff=no
  caller_suite=cancer
  filtered_calls=yes
  filtered_vars=yes
  with_cancer_genes=yes
  with_cosmic_variants=no
  with_coverage=yes
  with_gxp=no
  with_linked_variants=no
  with_rna_coverage=no
Made a network with 241 nodes.
Writing network in json format: test19.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 6 possible pipelines.
Making sure all required attributes (--mattr) are provided.
Missing --mattr: call_variants_muse requires attribute "wgs_or_wes".
Missing --mattr: call_variants_mutect2 requires attribute "mutect_cosmic_vcf".
Missing --mattr: call_variants_mutect requires attribute "mutect_cosmic_vcf".
Missing --mattr: call_variants_muse requires attribute "muse_dbsnp_vcf".
Missing --mattr: annotate_simplevariantmatrix_with_annovar requires attribute "annovar_buildver".
Missing --mattr: add_cancer_genes_to_simplevariantmatrix requires attribute "cancer_genes_file".
Missing --mattr: filter_simplevariantfile requires attribute "wgs_or_wes".
Missing --mattr: call_variants_mutect2 requires attribute "mutect_dbsnp_vcf".
Missing --mattr: call_variants_mutect requires attribute "mutect_dbsnp_vcf".
Starting rule engine.
Checking parameters.
Generating a network that produces a:
SimpleVariantMatrix
  annotated_with_annovar=yes
  annotated_with_snpeff=yes
  caller_suite=cancer_with_rna
  filtered_calls=yes
  filtered_vars=yes
  with_cancer_genes=yes
  with_cosmic_variants=no
  with_coverage=yes
  with_gxp=yes
  with_linked_variants=no
  with_rna_coverage=yes
Made a network with 382 nodes.
Writing network in json format: test20.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 96 possible pipelines.
Making sure all required attributes (--mattr) are provided.
Missing --mattr: call_variants_radia_with_rna requires attribute "snp_eff_genome".
Starting rule engine.
Checking parameters.
Generating a network that produces a:
SimpleVariantMatrix
  annotated_with_annovar=yes
  annotated_with_snpeff=no
  caller_suite=cancer
  filtered_calls=yes
  filtered_vars=no
  with_cancer_genes=yes
  with_cosmic_variants=no
  with_coverage=yes
  with_gxp=yes
  with_linked_variants=no
  with_rna_coverage=no
Made a network with 340 nodes.
Writing network in json format: test21.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 24 possible pipelines.
Making sure all required attributes (--mattr) are provided.
Missing --mattr: call_variants_mutect2 requires attribute "mutect_cosmic_vcf".
Missing --mattr: call_variants_mutect requires attribute "mutect_cosmic_vcf".
Missing --mattr: call_variants_muse requires attribute "muse_dbsnp_vcf".
Missing --mattr: call_variants_mutect2 requires attribute "mutect_dbsnp_vcf".
Missing --mattr: call_variants_mutect requires attribute "mutect_dbsnp_vcf".
Starting rule engine.
Checking parameters.
Generating a network that produces a:
CompleteRNASeqAnalysis
  adapters_trimmed=no
  aligner=star
Made a network with 102 nodes.
Writing network in json format: test22.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 4 possible pipelines.
Making sure all required attributes (--mattr) are provided.
Pruning redundant pipelines.
No redundant pipelines found.  4 final pipelines.
Making sure all input files provided.
No file given: FastqFolder.
No file given: SampleGroupFile.
No file given: ReferenceGenome.
No file given: RSEMReferenceGenome.
No file given: STARReferenceGenome.
No file given: GTFGeneModel.
Starting rule engine.
Checking parameters.
Generating a network that produces a:
Heatmap
  annotate=no
  bfrm_norm=no
  cluster_alg=hierarchical
  combat_norm=no
  contents=unspecified
  duplicate_probe=no
  dwd_norm=no
  filter_and_threshold=no
  gene_center=no
  gene_normalize=no
  group_fc=no
  logged=no
  num_features=no
  platform=no
  preprocess=unknown
  quantile_norm=no
  relabel_sample=no
  shiftscale_norm=no
  unique_genes=no
Made a network with 78 nodes.
Writing network in json format: test23.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 6 possible pipelines.
Making sure all required attributes (--mattr) are provided.
Pruning redundant pipelines.
No redundant pipelines found.  6 final pipelines.
Making sure all input files provided.
No --output_file specified.  Will not save results.
Ready to go!  Will run the analysis using a maximum of 4 cores.
Please review the network to make sure the analysis is correct.
Add --run when ready to run the analysis.
Starting rule engine.
Checking parameters.
Generating a network that produces a:
CompleteExpressionPreprocessing
  annotate=yes
  bfrm_norm=no
  combat_norm=no
  contents=unspecified
  duplicate_probe=no
  dwd_norm=no
  filter_and_threshold=no
  filter_missing_values=no
  gene_center=no
  gene_normalize=no
  gene_order=none
  group_fc=no
  logged=yes
  missing_algorithm=zero_fill
  num_features=no
  platform=no
  preprocess=illumina
  quantile_norm=no
  relabel_sample=no
  shiftscale_norm=no
  unique_genes=no
Made a network with 103 nodes.
Writing network in json format: test24.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 4 possible pipelines.
Making sure all required attributes (--mattr) are provided.
Pruning redundant pipelines.
No redundant pipelines found.  4 final pipelines.
Making sure all input files provided.
No file given: ExpressionFiles.
Starting rule engine.
Checking parameters.
Generating a network that produces a:
DiffExpAnalysis
  contents=unspecified
  de_algorithm=deseq2
  preprocess=counts
Made a network with 130 nodes.
Writing network in json format: test25.txt.
Assigning --input's to nodes in the network.
All --input data found in network.
Constructing pipelines that use --input data types.
Found 6 possible pipelines.
Making sure all required attributes (--mattr) are provided.
Pruning redundant pipelines.
No redundant pipelines found.  6 final pipelines.
Making sure all input files provided.
No file given: UnprocessedSignalFile.
No file given: SimpleClassFile.
